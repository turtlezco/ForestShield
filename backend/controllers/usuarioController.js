const Usuario = require('../models/Usuario');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');

// üîê Iniciar sesi√≥n
exports.loginUsuario = async (req, res) => {
  const { correo, contrase√±a } = req.body;

  try {
    // 1Ô∏è‚É£ Buscar usuario por correo
    const usuario = await Usuario.findOne({ correo });
    if (!usuario) {
      return res.status(400).json({ error: 'Correo no registrado' });
    }

    // 2Ô∏è‚É£ Comparar contrase√±a ingresada con la encriptada
    const esValida = await bcrypt.compare(contrase√±a, usuario.contrase√±a);
    if (!esValida) {
      return res.status(400).json({ error: 'Contrase√±a incorrecta' });
    }

    // 3Ô∏è‚É£ Crear token JWT
    const token = jwt.sign(
      { id: usuario._id, rol: usuario.rol },
      process.env.JWT_SECRET,
      { expiresIn: '2h' }
    );

    res.json({
      mensaje: 'Inicio de sesi√≥n exitoso',
      usuario: {
        nombre: usuario.nombre,
        correo: usuario.correo,
        rol: usuario.rol
      },
      token
    });
  } catch (error) {
    res.status(500).json({ error: 'Error al iniciar sesi√≥n' });
  }
};
